# general settings
name: train_colorformer
model_type: LABGANRGBModel
scale: 1
num_gpu: 1
manual_seed: 0
queue_size: 64

# dataset and data loader settings
datasets:
  train:
    name: ImageNet
    type: LabSegmentDataset
    dataroot_gt: /
    meta_info_file: ['']
    io_backend:
      type: disk

    gt_size: 256

    # augmentation config
    ## flip & rotate90
    use_hflip: True
    use_rot: False


    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  # val:
  #   name: ImageNet
  #   type: LabSegmentDataset
  #   # dataroot_gt: path_to_gt
  #   dataroot_gt: /
  #   meta_info_file: ''
  #   gt_size: 256
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: ColorFormer
  encoder_name: GLHTransformer
  pretrained_path: 'pretrain/GLH.pth'
  last_norm: Spectral
  num_output_channels: 2
  do_normalize: False
  color_centers_path: 'memory_build/semantic_color_cluster/color_embed_10k_m512_k64.npy'
  semantic_centers_path: 'memory_build/semantic_color_cluster/semantic_embed_10k_m512_k64.npy'

network_d:
  type: DynamicUNetDiscriminator
  nf: 64
  n_channels: 3


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [80000, 120000, 160000, 200000]
    gamma: 0.5

  total_iter: 200000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 0.1
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv1_1': 0.0625
      'conv2_1': 0.125
      'conv3_1': 0.25
      'conv4_1': 0.5
      'conv5_1': 1.0
    vgg_type: vgg16_bn
    use_input_norm: true
    range_norm: false
    perceptual_weight: 5.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 1.0

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 5e3
  save_img: True
  pbar: True

#   metrics:
#     psnr: # metric name, can be arbitrary
#       type: calculate_psnr
#       crop_border: 4
#       test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_snapshot_freq: !!float 1e3
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~


# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true
